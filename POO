//POO - Programaçao Orientada a Objetos - Simular coisas da realidade na programacao
   //
   //Objetos - possui Estados(nome, idade, endereço, altura etc), comportmentos(andar, correr, dormir, etc)
   //a POO é dividido:
   //classes - Sao modelos que servem para consytuçao de objetos derivados dele mesmo(ex. Classe pessoal)
   //as casses recebem atributos(os Estados)
   //
   //metodos - sera as instancias da classe, as formas de agir
   //
   //estrutura de uma classe :
   //  class Nome(){ocorridos de um objeto}
   //  
   /*
   var ricardo = Pessoa() //instanciando um objeto
   ricardo.nome = "Ricardo Silva Silva"
   ricardo.altura = 2.15
   ricardo.corDosOlhos = "vermelho"
   ricardo.peso = 100.0
   println(ricardo.altura) // para exibir um atributo em especifico
   */
    //exercicio: criem um churrasco e exib a lista de covidados no console, no minimo 6 pessoas 
    
  val convidado1 = Pessoa("Claudio", 1.79, "castanhos", 183.0)
   println(convidado1.peso)
   
  val convidado2 = Pessoa("Juliana", 1.50, "azul", 53.5)
  println(convidado1.nome)
  
  val convidado3 = Pessoa("Marizete", 1.64, "pretos", 76.0)
  println(convidado1.altura)
  
  val convidado4 = Pessoa("Vittor", 1.74, "castanho", 57.0)
  println(convidado1.corDosOlhos)
  
  val convidado5 = Pessoa("Silvana", 1.10, "verde", 64.0)
  println(convidado1.peso)
  
  val convidado6 = Pessoa("Joao", 1.50, "castanho", 69.4)
   println(convidado1.peso) 
    
}

class Pessoa(val nome: String,
              val altura: Double,
              val corDosOlhos: String, 
              val peso: Double){
    //declarando atributos para a classe
    /*
    var nome = ""
    var altura = 0.0
    var corDosOlhos = ""
    var peso = 0.0
    */
    
fun main() {
  /*
    var camaleao = Animal ("réptil",'M', "Madagascar",
                           "Carnívoro",7, true)
    //print("Meu Camaleão é um "+camaleao.classe+", ele é "+ camaleao.dieta+" e ele mora no "+camaleao.habitat)
    camaleao.Dormir(false)
    */
   val contaCorrente = ContaNoBanco(4002, 8922.00, "Safra",
                                    "Franco Francescco Aguero") 
   contaCorrente.consultarSaldo()
    
    
}
class Pessoa(val nome: String,
             val altura: Double,
            val corDosOlhos: String,
            val peso: Double){
    //declarando atributos para a classe
    /*
    var nome = ""
    var altura = 0.0
    var corDosOlhos = ""
    var peso = 0.0
    */
}
class Animal(val classe: String, val genero: Char, val habitat: String,
            val dieta: String, val idade: Int, val voa: Boolean){
    
    fun Atacar(bravo: Boolean){
        if(bravo == true){
            println("Animal atacando")
        }else{
            println("Animal de boa, suavao")
        }
    }
    //exercicio: Faça um novo comportamento para o seu animal usando uma nova fun
    
    fun Dormir(sono: Boolean){
        if(sono == true){
            println("Animal a mimir")
        }else{
            println("Animal acordado")
        }
    }
    fun Comer(fome: Boolean){
        if(fome == true){
            println("Animal se alimentando")
        }else{
            println("Animal cheio")
        }
    }
}
//Métodos - Comportamentos da nossa classe, que os nossos receberão
//eles são declarados usando funções
   
class ContaNoBanco(var senha: Int, var saldo : Double, 
                   var banco: String, var dono: String,
                  ){
    fun consultarSaldo(){
        println("o saldo da sua conta é R$$saldo")
    }
    
    
    
}


fun main() {
  /*
    var camaleao = Animal ("réptil",'M', "Madagascar",
                           "Carnívoro",7, true)
    //print("Meu Camaleão é um "+camaleao.classe+", ele é "+ camaleao.dieta+" e ele mora no "+camaleao.habitat)
    camaleao.Dormir(false)
    
  
  
   contaCorrente.saque(10000.00)
   contaCorrente.consultarSaldo()
   */
    val contaCorrente = ContaNoBanco(4002, 8922.00, "Safra",
                                    "Franco Francescco Aguero") 
   contaCorrente.deposito(6000.00)
   contaCorrente.consultarSaldo()
    
}
class ContaNoBanco(var senha: Int, var saldo : Double, 
                   var banco: String, var dono: String,
                  ){
    fun consultarSaldo(){
        println("o saldo da sua conta é R$$saldo")
    }
    
    fun saque(valorSaque: Double){
        if(valorSaque <= 0){
            println("Impossivel sacar R$$valorSaque")
        }else if(saldo >= valorSaque){
            saldo -= valorSaque
            println("Saque de r$$valorSaque realizado com sucesso")
        }else{
            println("Saldo insuficiente, saque de R$$valorSaque nao realizado")
        }
        }
    
      fun deposito (valorDeposito: Double){
          if(valorDeposito <= 0){
          println("Nao foi possivel fazer o deposito de R$$valorDeposito")
          }else{
              saldo += valorDeposito
          println("Deposito de R$$valorDeposito realizado")
          }
      }
      
   //Exercicio -- Faça um novo metodo para que possamos depositar dinheiro na nossa conta 
    
    
}
